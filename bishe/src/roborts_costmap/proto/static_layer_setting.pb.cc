// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: static_layer_setting.proto

#include "static_layer_setting.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace roborts_costmap {
class ParaStaticLayerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ParaStaticLayer>
      _instance;
} _ParaStaticLayer_default_instance_;
}  // namespace roborts_costmap
namespace protobuf_static_5flayer_5fsetting_2eproto {
static void InitDefaultsParaStaticLayer() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::roborts_costmap::_ParaStaticLayer_default_instance_;
    new (ptr) ::roborts_costmap::ParaStaticLayer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::roborts_costmap::ParaStaticLayer::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ParaStaticLayer =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsParaStaticLayer}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ParaStaticLayer.base);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::roborts_costmap::ParaStaticLayer, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::roborts_costmap::ParaStaticLayer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::roborts_costmap::ParaStaticLayer, first_map_only_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::roborts_costmap::ParaStaticLayer, subscribe_to_updates_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::roborts_costmap::ParaStaticLayer, track_unknown_space_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::roborts_costmap::ParaStaticLayer, use_maximum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::roborts_costmap::ParaStaticLayer, unknown_cost_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::roborts_costmap::ParaStaticLayer, trinary_map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::roborts_costmap::ParaStaticLayer, lethal_threshold_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::roborts_costmap::ParaStaticLayer, topic_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::roborts_costmap::ParaStaticLayer, is_raw_rosmessage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::roborts_costmap::ParaStaticLayer, is_debug_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::roborts_costmap::ParaStaticLayer, bonus_radius_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::roborts_costmap::ParaStaticLayer, yaw_mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::roborts_costmap::ParaStaticLayer, car_radius_x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::roborts_costmap::ParaStaticLayer, car_radius_y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::roborts_costmap::ParaStaticLayer, car_radius_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::roborts_costmap::ParaStaticLayer, car_obs_val_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::roborts_costmap::ParaStaticLayer, buff_obs_val_),
  1,
  2,
  3,
  4,
  5,
  7,
  6,
  0,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  16,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 22, sizeof(::roborts_costmap::ParaStaticLayer)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::roborts_costmap::_ParaStaticLayer_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "static_layer_setting.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\032static_layer_setting.proto\022\017roborts_co"
      "stmap\"\230\003\n\017ParaStaticLayer\022\026\n\016first_map_o"
      "nly\030\001 \002(\010\022\034\n\024subscribe_to_updates\030\002 \002(\010\022"
      "\033\n\023track_unknown_space\030\003 \002(\010\022\023\n\013use_maxi"
      "mum\030\004 \002(\010\022\032\n\022unknown_cost_value\030\005 \002(\005\022\023\n"
      "\013trinary_map\030\006 \002(\010\022\030\n\020lethal_threshold\030\007"
      " \002(\005\022\022\n\ntopic_name\030\010 \002(\t\022\031\n\021is_raw_rosme"
      "ssage\030\t \002(\010\022\020\n\010is_debug\030\n \002(\010\022\024\n\014bonus_r"
      "adius\030\013 \002(\005\022\020\n\010yaw_mode\030\014 \002(\005\022\024\n\014car_rad"
      "ius_x\030\r \002(\001\022\024\n\014car_radius_y\030\016 \002(\001\022\022\n\ncar"
      "_radius\030\017 \002(\001\022\023\n\013car_obs_val\030\020 \002(\005\022\024\n\014bu"
      "ff_obs_val\030\021 \002(\005"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 456);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "static_layer_setting.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_static_5flayer_5fsetting_2eproto
namespace roborts_costmap {

// ===================================================================

void ParaStaticLayer::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ParaStaticLayer::kFirstMapOnlyFieldNumber;
const int ParaStaticLayer::kSubscribeToUpdatesFieldNumber;
const int ParaStaticLayer::kTrackUnknownSpaceFieldNumber;
const int ParaStaticLayer::kUseMaximumFieldNumber;
const int ParaStaticLayer::kUnknownCostValueFieldNumber;
const int ParaStaticLayer::kTrinaryMapFieldNumber;
const int ParaStaticLayer::kLethalThresholdFieldNumber;
const int ParaStaticLayer::kTopicNameFieldNumber;
const int ParaStaticLayer::kIsRawRosmessageFieldNumber;
const int ParaStaticLayer::kIsDebugFieldNumber;
const int ParaStaticLayer::kBonusRadiusFieldNumber;
const int ParaStaticLayer::kYawModeFieldNumber;
const int ParaStaticLayer::kCarRadiusXFieldNumber;
const int ParaStaticLayer::kCarRadiusYFieldNumber;
const int ParaStaticLayer::kCarRadiusFieldNumber;
const int ParaStaticLayer::kCarObsValFieldNumber;
const int ParaStaticLayer::kBuffObsValFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ParaStaticLayer::ParaStaticLayer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_static_5flayer_5fsetting_2eproto::scc_info_ParaStaticLayer.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:roborts_costmap.ParaStaticLayer)
}
ParaStaticLayer::ParaStaticLayer(const ParaStaticLayer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  topic_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_topic_name()) {
    topic_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.topic_name_);
  }
  ::memcpy(&first_map_only_, &from.first_map_only_,
    static_cast<size_t>(reinterpret_cast<char*>(&buff_obs_val_) -
    reinterpret_cast<char*>(&first_map_only_)) + sizeof(buff_obs_val_));
  // @@protoc_insertion_point(copy_constructor:roborts_costmap.ParaStaticLayer)
}

void ParaStaticLayer::SharedCtor() {
  topic_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&first_map_only_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&buff_obs_val_) -
      reinterpret_cast<char*>(&first_map_only_)) + sizeof(buff_obs_val_));
}

ParaStaticLayer::~ParaStaticLayer() {
  // @@protoc_insertion_point(destructor:roborts_costmap.ParaStaticLayer)
  SharedDtor();
}

void ParaStaticLayer::SharedDtor() {
  topic_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ParaStaticLayer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ParaStaticLayer::descriptor() {
  ::protobuf_static_5flayer_5fsetting_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_static_5flayer_5fsetting_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ParaStaticLayer& ParaStaticLayer::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_static_5flayer_5fsetting_2eproto::scc_info_ParaStaticLayer.base);
  return *internal_default_instance();
}


void ParaStaticLayer::Clear() {
// @@protoc_insertion_point(message_clear_start:roborts_costmap.ParaStaticLayer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    topic_name_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 254u) {
    ::memset(&first_map_only_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&trinary_map_) -
        reinterpret_cast<char*>(&first_map_only_)) + sizeof(trinary_map_));
  }
  if (cached_has_bits & 65280u) {
    ::memset(&is_raw_rosmessage_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&car_obs_val_) -
        reinterpret_cast<char*>(&is_raw_rosmessage_)) + sizeof(car_obs_val_));
  }
  buff_obs_val_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ParaStaticLayer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:roborts_costmap.ParaStaticLayer)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool first_map_only = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_first_map_only();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &first_map_only_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool subscribe_to_updates = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_subscribe_to_updates();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &subscribe_to_updates_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool track_unknown_space = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_track_unknown_space();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &track_unknown_space_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool use_maximum = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_use_maximum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &use_maximum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 unknown_cost_value = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_unknown_cost_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &unknown_cost_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool trinary_map = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_trinary_map();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &trinary_map_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 lethal_threshold = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_lethal_threshold();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lethal_threshold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string topic_name = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_topic_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->topic_name().data(), static_cast<int>(this->topic_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "roborts_costmap.ParaStaticLayer.topic_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool is_raw_rosmessage = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_is_raw_rosmessage();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_raw_rosmessage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool is_debug = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_is_debug();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_debug_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 bonus_radius = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_bonus_radius();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bonus_radius_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 yaw_mode = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_yaw_mode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &yaw_mode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double car_radius_x = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(105u /* 105 & 0xFF */)) {
          set_has_car_radius_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &car_radius_x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double car_radius_y = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(113u /* 113 & 0xFF */)) {
          set_has_car_radius_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &car_radius_y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double car_radius = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(121u /* 121 & 0xFF */)) {
          set_has_car_radius();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &car_radius_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 car_obs_val = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {
          set_has_car_obs_val();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &car_obs_val_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 buff_obs_val = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {
          set_has_buff_obs_val();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &buff_obs_val_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:roborts_costmap.ParaStaticLayer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:roborts_costmap.ParaStaticLayer)
  return false;
#undef DO_
}

void ParaStaticLayer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:roborts_costmap.ParaStaticLayer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool first_map_only = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->first_map_only(), output);
  }

  // required bool subscribe_to_updates = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->subscribe_to_updates(), output);
  }

  // required bool track_unknown_space = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->track_unknown_space(), output);
  }

  // required bool use_maximum = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->use_maximum(), output);
  }

  // required int32 unknown_cost_value = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->unknown_cost_value(), output);
  }

  // required bool trinary_map = 6;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->trinary_map(), output);
  }

  // required int32 lethal_threshold = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->lethal_threshold(), output);
  }

  // required string topic_name = 8;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->topic_name().data(), static_cast<int>(this->topic_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "roborts_costmap.ParaStaticLayer.topic_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->topic_name(), output);
  }

  // required bool is_raw_rosmessage = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->is_raw_rosmessage(), output);
  }

  // required bool is_debug = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->is_debug(), output);
  }

  // required int32 bonus_radius = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->bonus_radius(), output);
  }

  // required int32 yaw_mode = 12;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->yaw_mode(), output);
  }

  // required double car_radius_x = 13;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(13, this->car_radius_x(), output);
  }

  // required double car_radius_y = 14;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(14, this->car_radius_y(), output);
  }

  // required double car_radius = 15;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(15, this->car_radius(), output);
  }

  // required int32 car_obs_val = 16;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->car_obs_val(), output);
  }

  // required int32 buff_obs_val = 17;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->buff_obs_val(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:roborts_costmap.ParaStaticLayer)
}

::google::protobuf::uint8* ParaStaticLayer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:roborts_costmap.ParaStaticLayer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool first_map_only = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->first_map_only(), target);
  }

  // required bool subscribe_to_updates = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->subscribe_to_updates(), target);
  }

  // required bool track_unknown_space = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->track_unknown_space(), target);
  }

  // required bool use_maximum = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->use_maximum(), target);
  }

  // required int32 unknown_cost_value = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->unknown_cost_value(), target);
  }

  // required bool trinary_map = 6;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->trinary_map(), target);
  }

  // required int32 lethal_threshold = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->lethal_threshold(), target);
  }

  // required string topic_name = 8;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->topic_name().data(), static_cast<int>(this->topic_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "roborts_costmap.ParaStaticLayer.topic_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->topic_name(), target);
  }

  // required bool is_raw_rosmessage = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->is_raw_rosmessage(), target);
  }

  // required bool is_debug = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->is_debug(), target);
  }

  // required int32 bonus_radius = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->bonus_radius(), target);
  }

  // required int32 yaw_mode = 12;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->yaw_mode(), target);
  }

  // required double car_radius_x = 13;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(13, this->car_radius_x(), target);
  }

  // required double car_radius_y = 14;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(14, this->car_radius_y(), target);
  }

  // required double car_radius = 15;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(15, this->car_radius(), target);
  }

  // required int32 car_obs_val = 16;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->car_obs_val(), target);
  }

  // required int32 buff_obs_val = 17;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->buff_obs_val(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:roborts_costmap.ParaStaticLayer)
  return target;
}

size_t ParaStaticLayer::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:roborts_costmap.ParaStaticLayer)
  size_t total_size = 0;

  if (has_topic_name()) {
    // required string topic_name = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->topic_name());
  }

  if (has_first_map_only()) {
    // required bool first_map_only = 1;
    total_size += 1 + 1;
  }

  if (has_subscribe_to_updates()) {
    // required bool subscribe_to_updates = 2;
    total_size += 1 + 1;
  }

  if (has_track_unknown_space()) {
    // required bool track_unknown_space = 3;
    total_size += 1 + 1;
  }

  if (has_use_maximum()) {
    // required bool use_maximum = 4;
    total_size += 1 + 1;
  }

  if (has_unknown_cost_value()) {
    // required int32 unknown_cost_value = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->unknown_cost_value());
  }

  if (has_lethal_threshold()) {
    // required int32 lethal_threshold = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lethal_threshold());
  }

  if (has_trinary_map()) {
    // required bool trinary_map = 6;
    total_size += 1 + 1;
  }

  if (has_is_raw_rosmessage()) {
    // required bool is_raw_rosmessage = 9;
    total_size += 1 + 1;
  }

  if (has_is_debug()) {
    // required bool is_debug = 10;
    total_size += 1 + 1;
  }

  if (has_bonus_radius()) {
    // required int32 bonus_radius = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bonus_radius());
  }

  if (has_yaw_mode()) {
    // required int32 yaw_mode = 12;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->yaw_mode());
  }

  if (has_car_radius_x()) {
    // required double car_radius_x = 13;
    total_size += 1 + 8;
  }

  if (has_car_radius_y()) {
    // required double car_radius_y = 14;
    total_size += 1 + 8;
  }

  if (has_car_radius()) {
    // required double car_radius = 15;
    total_size += 1 + 8;
  }

  if (has_car_obs_val()) {
    // required int32 car_obs_val = 16;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->car_obs_val());
  }

  if (has_buff_obs_val()) {
    // required int32 buff_obs_val = 17;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->buff_obs_val());
  }

  return total_size;
}
size_t ParaStaticLayer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:roborts_costmap.ParaStaticLayer)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0001ffff) ^ 0x0001ffff) == 0) {  // All required fields are present.
    // required string topic_name = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->topic_name());

    // required bool first_map_only = 1;
    total_size += 1 + 1;

    // required bool subscribe_to_updates = 2;
    total_size += 1 + 1;

    // required bool track_unknown_space = 3;
    total_size += 1 + 1;

    // required bool use_maximum = 4;
    total_size += 1 + 1;

    // required int32 unknown_cost_value = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->unknown_cost_value());

    // required int32 lethal_threshold = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lethal_threshold());

    // required bool trinary_map = 6;
    total_size += 1 + 1;

    // required bool is_raw_rosmessage = 9;
    total_size += 1 + 1;

    // required bool is_debug = 10;
    total_size += 1 + 1;

    // required int32 bonus_radius = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bonus_radius());

    // required int32 yaw_mode = 12;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->yaw_mode());

    // required double car_radius_x = 13;
    total_size += 1 + 8;

    // required double car_radius_y = 14;
    total_size += 1 + 8;

    // required double car_radius = 15;
    total_size += 1 + 8;

    // required int32 car_obs_val = 16;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->car_obs_val());

    // required int32 buff_obs_val = 17;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->buff_obs_val());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ParaStaticLayer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:roborts_costmap.ParaStaticLayer)
  GOOGLE_DCHECK_NE(&from, this);
  const ParaStaticLayer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ParaStaticLayer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:roborts_costmap.ParaStaticLayer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:roborts_costmap.ParaStaticLayer)
    MergeFrom(*source);
  }
}

void ParaStaticLayer::MergeFrom(const ParaStaticLayer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:roborts_costmap.ParaStaticLayer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_topic_name();
      topic_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.topic_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      first_map_only_ = from.first_map_only_;
    }
    if (cached_has_bits & 0x00000004u) {
      subscribe_to_updates_ = from.subscribe_to_updates_;
    }
    if (cached_has_bits & 0x00000008u) {
      track_unknown_space_ = from.track_unknown_space_;
    }
    if (cached_has_bits & 0x00000010u) {
      use_maximum_ = from.use_maximum_;
    }
    if (cached_has_bits & 0x00000020u) {
      unknown_cost_value_ = from.unknown_cost_value_;
    }
    if (cached_has_bits & 0x00000040u) {
      lethal_threshold_ = from.lethal_threshold_;
    }
    if (cached_has_bits & 0x00000080u) {
      trinary_map_ = from.trinary_map_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      is_raw_rosmessage_ = from.is_raw_rosmessage_;
    }
    if (cached_has_bits & 0x00000200u) {
      is_debug_ = from.is_debug_;
    }
    if (cached_has_bits & 0x00000400u) {
      bonus_radius_ = from.bonus_radius_;
    }
    if (cached_has_bits & 0x00000800u) {
      yaw_mode_ = from.yaw_mode_;
    }
    if (cached_has_bits & 0x00001000u) {
      car_radius_x_ = from.car_radius_x_;
    }
    if (cached_has_bits & 0x00002000u) {
      car_radius_y_ = from.car_radius_y_;
    }
    if (cached_has_bits & 0x00004000u) {
      car_radius_ = from.car_radius_;
    }
    if (cached_has_bits & 0x00008000u) {
      car_obs_val_ = from.car_obs_val_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00010000u) {
    set_buff_obs_val(from.buff_obs_val());
  }
}

void ParaStaticLayer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:roborts_costmap.ParaStaticLayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParaStaticLayer::CopyFrom(const ParaStaticLayer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:roborts_costmap.ParaStaticLayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParaStaticLayer::IsInitialized() const {
  if ((_has_bits_[0] & 0x0001ffff) != 0x0001ffff) return false;
  return true;
}

void ParaStaticLayer::Swap(ParaStaticLayer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ParaStaticLayer::InternalSwap(ParaStaticLayer* other) {
  using std::swap;
  topic_name_.Swap(&other->topic_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(first_map_only_, other->first_map_only_);
  swap(subscribe_to_updates_, other->subscribe_to_updates_);
  swap(track_unknown_space_, other->track_unknown_space_);
  swap(use_maximum_, other->use_maximum_);
  swap(unknown_cost_value_, other->unknown_cost_value_);
  swap(lethal_threshold_, other->lethal_threshold_);
  swap(trinary_map_, other->trinary_map_);
  swap(is_raw_rosmessage_, other->is_raw_rosmessage_);
  swap(is_debug_, other->is_debug_);
  swap(bonus_radius_, other->bonus_radius_);
  swap(yaw_mode_, other->yaw_mode_);
  swap(car_radius_x_, other->car_radius_x_);
  swap(car_radius_y_, other->car_radius_y_);
  swap(car_radius_, other->car_radius_);
  swap(car_obs_val_, other->car_obs_val_);
  swap(buff_obs_val_, other->buff_obs_val_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ParaStaticLayer::GetMetadata() const {
  protobuf_static_5flayer_5fsetting_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_static_5flayer_5fsetting_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace roborts_costmap
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::roborts_costmap::ParaStaticLayer* Arena::CreateMaybeMessage< ::roborts_costmap::ParaStaticLayer >(Arena* arena) {
  return Arena::CreateInternal< ::roborts_costmap::ParaStaticLayer >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
